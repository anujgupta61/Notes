Build automation is the process of automating the creation of a software build and the associated processes including: compiling computer source code into binary code,
packaging binary code, and running automated tests.

Maven -
Maven is a build automation tool used primarily for Java projects. However Maven can also be used to build and manage projects written in C#, Ruby, Scala etc.
Maven addresses two aspects of building software: first, it describes how software is built, and second, it describes its dependencies.
An XML file describes the software project being built, its dependencies on other external modules and components, the build order, directories, and required plug-ins.
It comes with pre-defined targets for performing certain well-defined tasks such as compilation of code and its packaging.
Maven dynamically downloads Java libraries and Maven plug-ins from one or more repositories such as the Maven 2 Central Repository, and stores them in a local cache.
Maven is built using a plugin-based architecture that allows it to make use of any application controllable through standard input.
There are three built-in build lifecycles: default, clean and site.
The default lifecycle handles your project deployment,
the clean lifecycle handles project cleaning,
while the site lifecycle handles the creation of your project's site documentation.
The default lifecycle comprises of the following phases (stage) -
validate - validate the project is correct and all necessary information is available
compile - compile the source code of the project
test - test the compiled source code using a suitable unit testing framework. These tests should not require the code be packaged or deployed
package - take the compiled code and package it in its distributable format, such as a JAR.
verify - run any checks on results of integration tests to ensure quality criteria are met
install - install the package into the local repository, for use as a dependency in other projects locally
deploy - done in the build environment, copies the final package to the remote repository for sharing with other developers and projects.

Gradle -
Gradle is an open-source build automation system that builds upon the concepts of Apache Ant and Apache Maven and introduces a Groovy-based
domain-specific language (DSL) instead of the XML form used by Apache Maven for declaring the project configuration. Gradle uses a directed acyclic graph ("DAG")
to determine the order in which tasks can be run.
Gradle was designed for multi-project builds, which can grow to be quite large. It supports incremental builds by intelligently determining which parts of the
build tree are up to date; any task dependent on those parts does not need to be re-executed.
The initial plugins are primarily focused on Java, Groovy and Scala development and deployment, but more languages and project workflows are on the roadmap.
